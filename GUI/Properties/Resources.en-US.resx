<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddDepartment" xml:space="preserve">
    <value>Add department</value>
  </data>
  <data name="AddProfessor" xml:space="preserve">
    <value>Add profesor</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddStudent" xml:space="preserve">
    <value>Add student</value>
  </data>
  <data name="AddSubject" xml:space="preserve">
    <value>Add subject</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="AverageGrade" xml:space="preserve">
    <value>Average grade</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="Calling" xml:space="preserve">
    <value>Calling</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cannotBe" xml:space="preserve">
    <value>This subject cannot be deleted.</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ComparingTwo" xml:space="preserve">
    <value>Comparing two subjects</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateOfGrading" xml:space="preserve">
    <value>Date of grading</value>
  </data>
  <data name="delDep" xml:space="preserve">
    <value>Are you sure you want to delete this department?</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Delete confirmation</value>
  </data>
  <data name="DeleteGrade" xml:space="preserve">
    <value>Delete grade</value>
  </data>
  <data name="DeleteSubject" xml:space="preserve">
    <value>Delete Subject</value>
  </data>
  <data name="delGrade" xml:space="preserve">
    <value>Are you sure you want to delete this grade?</value>
  </data>
  <data name="delGradeWarning" xml:space="preserve">
    <value>By deleting this grade, the subject would be added into enrolled subjects.</value>
  </data>
  <data name="delProf" xml:space="preserve">
    <value>Are you sure you want to delete this professor?</value>
  </data>
  <data name="delStudent" xml:space="preserve">
    <value>Are you sure you want to delete this student?</value>
  </data>
  <data name="delStudWarning" xml:space="preserve">
    <value>By deleting this student, you will also delete their grades and subjects.</value>
  </data>
  <data name="delSub" xml:space="preserve">
    <value>Are you sure you want to delete this subject?</value>
  </data>
  <data name="DepartmentDetails" xml:space="preserve">
    <value>Department details</value>
  </data>
  <data name="DepartmentId" xml:space="preserve">
    <value>Department ID</value>
  </data>
  <data name="Departments" xml:space="preserve">
    <value>Departments</value>
  </data>
  <data name="Ects" xml:space="preserve">
    <value>Ects</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="enrolled" xml:space="preserve">
    <value>There are students enrolled in this subject and grades for this subject.</value>
  </data>
  <data name="EnrollmentYear" xml:space="preserve">
    <value>Enrollment year</value>
  </data>
  <data name="ExamGrades" xml:space="preserve">
    <value>ExamGrades</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FinancialAid" xml:space="preserve">
    <value>Financial aid</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Grade" xml:space="preserve">
    <value>Grade</value>
  </data>
  <data name="GradeDetails" xml:space="preserve">
    <value>Grade details</value>
  </data>
  <data name="HeadOfDepartment" xml:space="preserve">
    <value>Head of department</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="IdCard" xml:space="preserve">
    <value>Id card number</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index number</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Localization" xml:space="preserve">
    <value>Localization</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>Pass</value>
  </data>
  <data name="PassedExams" xml:space="preserve">
    <value>Passed exams</value>
  </data>
  <data name="PassedOne" xml:space="preserve">
    <value>Passed one</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ProfessorDetails" xml:space="preserve">
    <value>Professor details</value>
  </data>
  <data name="ProfessorList" xml:space="preserve">
    <value>Professor list</value>
  </data>
  <data name="ProfessorName" xml:space="preserve">
    <value>Professor name</value>
  </data>
  <data name="Professors" xml:space="preserve">
    <value>Professors</value>
  </data>
  <data name="reasign" xml:space="preserve">
    <value>Please reassign students and grades or remove them from this subject before deleting.</value>
  </data>
  <data name="requestLabel" xml:space="preserve">
    <value>Showing students that listen to</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SelectHOD" xml:space="preserve">
    <value>Select as Head of Department</value>
  </data>
  <data name="Semester" xml:space="preserve">
    <value>Semester</value>
  </data>
  <data name="Serbian" xml:space="preserve">
    <value>Serbian</value>
  </data>
  <data name="ShowProfessors" xml:space="preserve">
    <value>Show professors</value>
  </data>
  <data name="ShowStudents" xml:space="preserve">
    <value>Show students for this professor</value>
  </data>
  <data name="StatusBarString" xml:space="preserve">
    <value>Localization example</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="StreetNumber" xml:space="preserve">
    <value>Street Number</value>
  </data>
  <data name="StudentDetails" xml:space="preserve">
    <value>Student details</value>
  </data>
  <data name="StudentList" xml:space="preserve">
    <value>Student list</value>
  </data>
  <data name="Students" xml:space="preserve">
    <value>Students</value>
  </data>
  <data name="SubjectDeletionWarning" xml:space="preserve">
    <value>Subject Deletion Warning</value>
  </data>
  <data name="SubjectDetails" xml:space="preserve">
    <value>Subject Details</value>
  </data>
  <data name="SubjectId" xml:space="preserve">
    <value>Subject ID</value>
  </data>
  <data name="SubjectList" xml:space="preserve">
    <value>Subject list</value>
  </data>
  <data name="SubjectName" xml:space="preserve">
    <value>Subject name</value>
  </data>
  <data name="Subjects" xml:space="preserve">
    <value>Subjects</value>
  </data>
  <data name="TakingBoth" xml:space="preserve">
    <value>Taking both</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateDepartment" xml:space="preserve">
    <value>Update department</value>
  </data>
  <data name="UpdateProfessor" xml:space="preserve">
    <value>Update Professor</value>
  </data>
  <data name="UpdateStudent" xml:space="preserve">
    <value>Update Student</value>
  </data>
  <data name="UpdateSubject" xml:space="preserve">
    <value>Update Subject</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="YearOfStudies" xml:space="preserve">
    <value>Year of studies</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Yoe" xml:space="preserve">
    <value>Year of Employment</value>
  </data>
</root>